import time
from utils.logger import log
from config.settings import get_config
from utils.fetch_top_n_volatility_volume import fetch_top_n_volatility_volume
from utils.public import merge_symbols_with_config

config = get_config()

def update_symbols_periodically(symbols_container: dict):
    """
    Thread qui met √† jour p√©riodiquement la liste des symboles.

    :param symbols_container: dict partag√© pour stocker la liste des symboles
    """
    interval = getattr(config.strategy, "auto_select_update_interval", 300)

    while True:
        try:
            log("[INFO] üîÑ Mise √† jour des symboles...", level="INFO")
            
            # R√©cup√®re les symboles auto
            auto_symbols = fetch_top_n_volatility_volume(
                n=getattr(config.strategy, "auto_select_top_n", 10)
            )

            # ‚úÖ Protection contre None
            if not auto_symbols:
                log("[WARNING] ‚ö†Ô∏è Aucun symbole r√©cup√©r√©, auto_symbols remplac√© par []", level="WARNING")
                auto_symbols = []

            # Merge avec la configuration (includes/excludes)
            symbols = merge_symbols_with_config(auto_symbols)

            # Met √† jour le container partag√©
            symbols_container['list'] = symbols

            log(f"[INFO] ‚úÖ Symboles mis √† jour : {symbols}", level="INFO")

        except Exception as e:
            log(f"[ERROR] ‚ùå Erreur mise √† jour symboles : {e}", level="ERROR")

        time.sleep(interval)
